Index: src/ui/widgets/mqttDataGraph.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from PyQt6.QtWidgets import QWidget, QVBoxLayout\r\nimport pyqtgraph as pg\r\n\r\nfrom src.model.unitConverter import UnitConverter\r\n\r\n\r\nclass MqttDataGraph(QWidget):\r\n    def __init__(self, rowSpecs, data):\r\n        super().__init__()\r\n        self.rowSpecs = rowSpecs\r\n        self.converter = UnitConverter()\r\n        self.layout = QVBoxLayout(self)\r\n        self.plot_widget = pg.PlotWidget()  # Store as instance variable\r\n        self.leftLabel = rowSpecs.title\r\n        self.initial_data = data\r\n\r\n        # Initial setup\r\n        self.setUpPlot(rowSpecs.units[0])\r\n        self.layout.addWidget(self.plot_widget)\r\n\r\n    def setUpPlot(self,unit):\r\n        self.plot_widget.clear()\r\n        time = [t for (_, t) in self.initial_data]\r\n        data = [d for (d, _) in self.initial_data]\r\n        data = self.converter.convertUnits(self.rowSpecs.title,self.rowSpecs.units[0],unit,data)\r\n        self.plot_line = self.plot_widget.plot(time, data, pen=pg.mkPen(color=(255, 0, 0)))\r\n\r\n        self.plot_widget.setLabel(\"left\", self.leftLabel)\r\n        self.plot_widget.setLabel(\"bottom\", \"Time (h)\")\r\n        self.plot_widget.setTitle(f\"{self.leftLabel} vs Time\", color=\"w\", size=\"10pt\")\r\n\r\n    def updateGraph(self, new_data,unit):\r\n        self.plot_widget.removeItem(self.plot_line)\r\n\r\n        time = [t for (_, t) in new_data]\r\n        data = [d for (d, _) in new_data]\r\n        print(\"==\")\r\n\r\n        print(data)\r\n        print(self.rowSpecs.units[0])\r\n        print(unit)\r\n\r\n        data = self.converter.convertUnits(self.rowSpecs.title,self.rowSpecs.units[0],unit,data)\r\n        print(data)\r\n        print(\"==\")\r\n\r\n        self.plot_line = self.plot_widget.plot(time, data, pen=pg.mkPen(color=(255, 0, 0)))\r\n\r\n        self.plot_widget.autoRange()\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ui/widgets/mqttDataGraph.py b/src/ui/widgets/mqttDataGraph.py
--- a/src/ui/widgets/mqttDataGraph.py	(revision 3d2c972c5e8e2c8e3b8dda67f84a199ec92060a9)
+++ b/src/ui/widgets/mqttDataGraph.py	(date 1743752256180)
@@ -34,15 +34,8 @@
 
         time = [t for (_, t) in new_data]
         data = [d for (d, _) in new_data]
-        print("==")
-
-        print(data)
-        print(self.rowSpecs.units[0])
-        print(unit)
 
         data = self.converter.convertUnits(self.rowSpecs.title,self.rowSpecs.units[0],unit,data)
-        print(data)
-        print("==")
 
         self.plot_line = self.plot_widget.plot(time, data, pen=pg.mkPen(color=(255, 0, 0)))
 
Index: src/model/user.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from fontTools.misc.cython import returns\r\n\r\n\r\nclass User:\r\n    def __init__(self,username,password):\r\n        self.username = username;\r\n        self.password = password;\r\n\r\n    def getPassword(self):\r\n        return self.password\r\n    def getUsername(self):\r\n        return self.username\r\n    def checkCredentials(self, password):\r\n        if password == self.password:\r\n            return True\r\n        else:\r\n            return False
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/user.py b/src/model/user.py
--- a/src/model/user.py	(revision 3d2c972c5e8e2c8e3b8dda67f84a199ec92060a9)
+++ b/src/model/user.py	(date 1743752161489)
@@ -1,4 +1,3 @@
-from fontTools.misc.cython import returns
 
 
 class User:
